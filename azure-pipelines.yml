name: Build npm release - $(Build.BuildId)

trigger:
  - master

stages:
- stage: Build
  jobs:
    - template: .ci/build-platform.yml
      parameters:
        platform: Linux
        vmImage: ubuntu-16.04
        esyLockPath: $(Build.SourcesDirectory)/esy.lock/index.json
        installFolderPath: /3______________________________________________________________
        ESY__PREFIX: $(Pipeline.Workspace)/.esy

    - template: .ci/build-platform.yml
      parameters:
        platform: macOS
        vmImage: macOS-10.13
        esyLockPath: $(Build.SourcesDirectory)/esy.lock/index.json
        installFolderPath: /3_______________________________________________
        ESY__PREFIX: $(Pipeline.Workspace)/.esy

    # - template: .ci/build-platform.yml
    #   parameters:
    #     platform: Windows
    #     vmImage: vs2017-win2016
    #     esyLockPath: $(Build.SourcesDirectory)\esy.lock\index.json
    #     installFolderPath: \3_
    #     ESY__PREFIX: $(Pipeline.Workspace)\.esy

- stage: Publish_docs
  displayName: Publish documentation
  dependsOn: [Build]
  jobs:
  - deployment: Publish_docs
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Publish docs to Github
    environment: prod
    pool:
      vmImage: ubuntu-16.04
    strategy:
      runOnce:
        deploy:
          steps:
            - script: |
                git clone https://$(github_pat)@github.com/reason-native-web/morph .
                git checkout gh-pages
                git pull
              workingDirectory: $(Build.StagingDirectory)
              displayName: "Clone GitHub pages repo"

            - script: |
                rm -rf $(Build.StagingDirectory)/morph
                rm -rf $(Build.StagingDirectory)/morph_client
                rm -rf $(Build.StagingDirectory)/morph_core
                rm $(Build.StagingDirectory)/index.html
                rm $(Build.StagingDirectory)/odoc.css
                rm $(Build.StagingDirectory)/highlight.pack.js
              displayName: Remove last version of the docs

            - task: DownloadPipelineArtifact@2
              displayName: Download docs
              inputs:
                artifactName: Docs
                targetPath: $(Build.StagingDirectory)
              
            - script: |
                git config user.name "Strid Bot"
                git add --all
                git commit --message "$(Build.SourceVersionMessage)"
                git push gh-pages
              workingDirectory: $(Build.StagingDirectory)
              displayName: "Push docs to Github pages"
