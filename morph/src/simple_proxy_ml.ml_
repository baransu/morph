Fmt_tty.setup_std_outputs ();
Logs.set_level (Some Logs.Info);
Logs.set_reporter (Logs_fmt.reporter ());

let logger service (request : Morph_core.Request.t) =
  let open Lwt.Infix in
  let start_request = Mtime_clock.elapsed () in
  service request
  >|= fun response ->
  let end_request = Mtime_clock.elapsed () in
  Logs.info (fun m ->
      m
        ("http: %s request to %s finished in %fms")
        (Morph_core.Method.to_string request.meth)
        request.target
        (Mtime.Span.abs_diff start_request end_request |> Mtime.Span.to_ms)) ;
  response;

let proxy {target; meth; headers; read_body; context} : Morph_core.Request.t =
  let host = "www.bing.com" in
  let target = "https://" ^ host ^ target in
  let () = Logs.info (fun m -> m "Proxying request to: %s" target) in
  let headers =
    List.filter
      (fun (name, _) ->
        match name with
        | "Upgrade-Insecure-Requests" ->
            false
        | "Host" ->
            false
        | _ ->
            true)
      headers
    |> List.append
         [("Via", "HTTP/1.1 localhost:8080"); ("X-Forwarded-For", "_secret")]
  in
  service {target; meth; headers; read_body; context};

Morph.start_server ~middlewares:[logger; proxy] Morph_client.handle
|> Lwt_main.run
